{"version":3,"sources":["../server.js"],"names":["require","config","fs","join","express","mongoose","passport","models","__dirname","port","process","env","PORT","app","module","exports","readdirSync","filter","file","search","forEach","connect","on","console","log","once","listen","get","connection"],"mappings":"AAAA;;AAEA;;;;;;AAMA;;;;AAIAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,IAAMC,KAAKF,QAAQ,IAAR,CAAX;AACA,IAAMG,OAAOH,QAAQ,MAAR,EAAgBG,IAA7B;AACA,IAAMC,UAAUJ,QAAQ,SAAR,CAAhB;AACA,IAAMK,WAAWL,QAAQ,UAAR,CAAjB;AACA,IAAMM,WAAWN,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASD,QAAQ,UAAR,CAAf;;AAEA,IAAMO,SAASJ,KAAKK,SAAL,EAAgB,YAAhB,CAAf;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,MAAMT,SAAZ;;AAEA;;;;AAIAU,OAAOC,OAAP,GAAiBF,GAAjB;;AAEA;AACAX,GAAGc,WAAH,CAAeT,MAAf,EACGU,MADH,CACU;AAAA,SAAQ,CAACC,KAAKC,MAAL,CAAY,eAAZ,CAAT;AAAA,CADV,EAEGC,OAFH,CAEW;AAAA,SAAQpB,QAAQG,KAAKI,MAAL,EAAaW,IAAb,CAAR,CAAR;AAAA,CAFX;;AAIA;AACAlB,QAAQ,mBAAR,EAA6BM,QAA7B;AACAN,QAAQ,kBAAR,EAA4Ba,GAA5B,EAAiCP,QAAjC;AACAN,QAAQ,iBAAR,EAA2Ba,GAA3B,EAAgCP,QAAhC;;AAEAe,UACGC,EADH,CACM,OADN,EACeC,QAAQC,GADvB,EAEGF,EAFH,CAEM,cAFN,EAEsBD,OAFtB,EAGGI,IAHH,CAGQ,MAHR,EAGgBC,MAHhB;;AAKA,SAASA,MAAT,GAAmB;AACjB,MAAIb,IAAIc,GAAJ,CAAQ,KAAR,MAAmB,MAAvB,EAA+B;AAC/Bd,MAAIa,MAAJ,CAAWjB,IAAX;AACAc,UAAQC,GAAR,CAAY,iCAAiCf,IAA7C;AACD;;AAED,SAASY,OAAT,GAAoB;AAClB;AACA;AACE,SAAOhB,SAASgB,OAAT,CAAiB,oCAAjB,EAAuDO,UAA9D;AACH;;AAID","file":"server.js","sourcesContent":["'use strict';\n\n/*\n * nodejs-express-mongoose-demo\n * Copyright(c) 2013 Madhusudhan Srinivasa <madhums8@gmail.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies\n */\n\nrequire('dotenv').config();\n\nconst fs = require('fs');\nconst join = require('path').join;\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst passport = require('passport');\nconst config = require('./config');\n\nconst models = join(__dirname, 'app/models');\nconst port = process.env.PORT || 3000;\nconst app = express();\n\n/**\n * Expose\n */\n\nmodule.exports = app;\n\n// Bootstrap models\nfs.readdirSync(models)\n  .filter(file => ~file.search(/^[^\\.].*\\.js$/))\n  .forEach(file => require(join(models, file)));\n\n// Bootstrap routes\nrequire('./config/passport')(passport);\nrequire('./config/express')(app, passport);\nrequire('./config/routes')(app, passport);\n\nconnect()\n  .on('error', console.log)\n  .on('disconnected', connect)\n  .once('open', listen);\n\nfunction listen () {\n  if (app.get('env') === 'test') return;\n  app.listen(port);\n  console.log('Express app started on port ' + port);\n}\n\nfunction connect () {\n  // var options = { server: { socketOptions: { keepAlive: 1 } } };\n  // return mongoose.connect(config.db, options).connection;\n    return mongoose.connect('mongodb://localhost:27017/xiaoshuo').connection;\n}\n\n\n\n/*\n\nvar express = require('express');\nvar path = require('path');\n\nvar fs = require('fs');\nvar http = require('http');\nvar https = require('https');\nprivateKey  = fs.readFileSync('./cert/1523182031415.key', 'utf8'),\ncertificate = fs.readFileSync('./cert/1523182031415.pem', 'utf8');\nvar credentials = {key: privateKey, cert: certificate};\n\nvar app = express();\n\napp.use(express.static(path.join(__dirname, 'index')));\n\nhttpServer = http.createServer(app);\nhttpsServer = https.createServer(credentials, app);\nvar PORT = 80;\nvar SSLPORT = 443;\n\nhttpServer.listen(PORT, function() {\n    console.log('HTTP Server is running on: http://localhost:%s', PORT);\n});\n\nhttpsServer.listen(SSLPORT, function() {\n    console.log('HTTPS Server is running on: https://localhost:%s', SSLPORT);\n});\n\n */\n"]}